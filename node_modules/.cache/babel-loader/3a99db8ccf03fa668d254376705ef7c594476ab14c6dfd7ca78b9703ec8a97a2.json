{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/worldoftechnology/project-images/client/src/components/layouts/sidebar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"store/hooks\";\nimport { SVG, Modal } from \"components\";\nimport { useTranslation } from \"react-i18next\";\nimport { setGlobalParams } from \"store/slicers/global\";\nimport { selectAuthentication, selectMessages, selectSidebar } from \"store/selectors\";\nimport { useAuthentication } from \"components/hooks\";\nimport { AppRoutes } from \"libs/routes\";\nimport Link from \"next/link\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Sidebar() {\n  _s();\n  const [searchModal, setSearchModal] = useState(false);\n  const [languagesModal, setLanguagesModal] = useState(false);\n  const [settingsModal, setSettingsModal] = useState(false);\n  const [notificationModal, setNotificationsModal] = useState(false);\n  const [messagesModal, setMessagesModal] = useState(false);\n  const [fullScreen, setFullScreen] = useState(typeof document !== 'undefined' ? document.fullscreenEnabled : false);\n  const [query, setQuery] = useState(\"\");\n  const {\n    t\n  } = useTranslation('translation');\n  const sidebar = useAppSelector(selectSidebar);\n  const [sidebarStatus, setSidebarStatus] = useState(null);\n  const dispatch = useAppDispatch();\n  const {\n    isAdmin\n  } = useAuthentication({});\n  const {\n    chats\n  } = useAppSelector(selectMessages);\n  const {\n    profile\n  } = useAppSelector(selectAuthentication);\n  const [darkLightMode, setDarkLightMode] = useState(sidebar.isVisibleBg);\n  const directionToggle = () => {\n    if (sidebar.direction === 'right') {\n      dispatch(setGlobalParams({\n        param: 'sidebar',\n        key: 'direction',\n        value: 'left'\n      }));\n    } else {\n      dispatch(setGlobalParams({\n        param: 'sidebar',\n        key: 'direction',\n        value: 'right'\n      }));\n    }\n  };\n  const fullscreenToggle = () => {\n    const el = document.documentElement;\n    function fullscreen() {\n      if (el.requestFullscreen) {\n        el.requestFullscreen();\n        setFullScreen(true);\n      }\n    }\n    function existFullscreen() {\n      if (document.fullscreenElement) {\n        document.exitFullscreen().catch(er => console.log(er));\n        setFullScreen(false);\n      }\n    }\n    if (window.fullScreen && window.screen.height === window.innerHeight) {\n      existFullscreen();\n    } else if (window.screen.height !== window.innerHeight) {\n      fullscreen();\n    }\n  };\n  const unreadMessagesCount = () => {\n    let count = 0;\n    if (profile) {\n      for (let i = 0; i < chats.length; i++) {\n        let messages = chats[i].messages;\n        for (let j = 0; j < messages.length; j++) {\n          if (!messages[j].viewers.includes(profile.id) && messages[j].user.id !== profile.id) count++;\n        }\n      }\n    }\n    return count;\n  };\n  useEffect(() => {\n    setSidebarStatus(sidebar);\n    window.onkeydown = event => {\n      if (event.key === 'Escape' || event.key === 'F11') {\n        event.preventDefault();\n        fullscreenToggle();\n      }\n    };\n  }, [sidebar]);\n  if (!sidebarStatus || sidebarStatus && !sidebarStatus.isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${sidebar.direction}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"sidebar-buttons\",\n        onClick: () => directionToggle(),\n        title: t(\"Switch the sidebar direction\"),\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: `arrow-${sidebar.direction === 'right' ? 'left' : 'right'}`,\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"sidebar-buttons\",\n        onClick: () => setSearchModal(!searchModal),\n        title: t('Search'),\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: \"search\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"sidebar-buttons\",\n        onClick: () => setDarkLightMode(true),\n        title: t('Dark-light mode'),\n        id: \"sidebar-darkLightMode-button\",\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: \"circle-half-stroke\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"sidebar-buttons\",\n        onClick: () => fullscreenToggle(),\n        title: t(\"Exit fullscreen\") || t(\"Fullscreen\"),\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: fullScreen ? \"compress-solid\" : \"expand-solid\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"sidebar-buttons\",\n        onClick: () => setLanguagesModal(!languagesModal),\n        title: t(\"Choose your language\"),\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: \"language\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"sidebar-buttons\",\n        onClick: () => setSettingsModal(!settingsModal),\n        title: t(\"Settings\"),\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: \"gear-solid\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: AppRoutes.favorites,\n        className: \"sidebar-buttons\",\n        title: t(\"Favorites\"),\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: \"heart-solid\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: AppRoutes.profiles,\n        className: \"sidebar-buttons\",\n        title: t(\"Users\"),\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: \"user-group-solid\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: AppRoutes.posts,\n        className: \"sidebar-buttons\",\n        title: t(\"Posts\"),\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: \"blog-solid\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sidebar-buttons\",\n        title: t(\"Messages\"),\n        onClick: () => setMessagesModal(true),\n        children: [/*#__PURE__*/_jsxDEV(SVG, {\n          name: \"comment-solid\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), unreadMessagesCount() > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"unreadMessagesCount\",\n          title: t(\"New messages\"),\n          children: unreadMessagesCount()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-buttons\",\n          title: t(\"Notifications\"),\n          onClick: () => setNotificationsModal(true),\n          children: /*#__PURE__*/_jsxDEV(SVG, {\n            name: \"bell-solid\",\n            color: sidebar.color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : null, /*#__PURE__*/_jsxDEV(Link, {\n        href: AppRoutes.goals,\n        className: \"sidebar-buttons\",\n        title: t(\"My goals\"),\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          name: \"trophy-solid\",\n          color: sidebar.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: searchModal,\n      title: \"Search\",\n      setIsVisible: setSearchModal,\n      form: \"search\",\n      query,\n      setQuery,\n      sender: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: languagesModal,\n      title: \"Choose your language\",\n      setIsVisible: setLanguagesModal,\n      form: \"translation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: settingsModal,\n      title: \"Settings\",\n      closeButton: true,\n      setIsVisible: setSettingsModal,\n      form: \"settings\",\n      border: \"specialColor\",\n      fullScreen: true,\n      background: \"bgNone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: darkLightMode,\n      title: \"Dark light mode\",\n      closeButton: true,\n      setIsVisible: setDarkLightMode,\n      form: \"dark-light-mode\",\n      fullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: notificationModal,\n      title: \"Notifications\",\n      closeButton: true,\n      setIsVisible: setNotificationsModal,\n      form: \"notifications\",\n      fullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isVisible: messagesModal,\n      title: \"Messages\",\n      closeButton: true,\n      setIsVisible: setMessagesModal,\n      fullScreen: true,\n      form: \"messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Sidebar, \"MR+DLQZQU0K4DPHB3omv9AM5J6M=\", false, function () {\n  return [useTranslation, useAppSelector, useAppDispatch, useAuthentication, useAppSelector, useAppSelector];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","useState","useAppDispatch","useAppSelector","SVG","Modal","useTranslation","setGlobalParams","selectAuthentication","selectMessages","selectSidebar","useAuthentication","AppRoutes","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar","_s","searchModal","setSearchModal","languagesModal","setLanguagesModal","settingsModal","setSettingsModal","notificationModal","setNotificationsModal","messagesModal","setMessagesModal","fullScreen","setFullScreen","document","fullscreenEnabled","query","setQuery","t","sidebar","sidebarStatus","setSidebarStatus","dispatch","isAdmin","chats","profile","darkLightMode","setDarkLightMode","isVisibleBg","directionToggle","direction","param","key","value","fullscreenToggle","el","documentElement","fullscreen","requestFullscreen","existFullscreen","fullscreenElement","exitFullscreen","catch","er","console","log","window","screen","height","innerHeight","unreadMessagesCount","count","i","length","messages","j","viewers","includes","id","user","onkeydown","event","preventDefault","isVisible","children","className","type","onClick","title","name","color","fileName","_jsxFileName","lineNumber","columnNumber","href","favorites","profiles","posts","goals","setIsVisible","form","sender","closeButton","border","background","_c","$RefreshReg$"],"sources":["/home/mohammed/worldoftechnology/project-images/client/src/components/layouts/sidebar.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"store/hooks\";\nimport { SVG, Modal } from \"components\";\nimport { useTranslation } from \"react-i18next\";\nimport { setGlobalParams } from \"store/slicers/global\";\nimport { selectAuthentication, selectMessages, selectSidebar } from \"store/selectors\";\nimport { useAuthentication } from \"components/hooks\";\nimport { AppRoutes } from \"libs/routes\";\nimport Link from \"next/link\";\n\n\nfunction Sidebar() {\n    const [searchModal, setSearchModal] = useState<boolean>(false);\n    const [languagesModal, setLanguagesModal] = useState<boolean>(false);\n    const [settingsModal, setSettingsModal] = useState<boolean>(false);\n    const [notificationModal, setNotificationsModal] = useState<boolean>(false);\n    const [messagesModal, setMessagesModal] = useState<boolean>(false);\n    const [fullScreen, setFullScreen] = useState<boolean>(typeof document !== 'undefined' ? document.fullscreenEnabled : false);\n    const [query, setQuery] = useState<string>(\"\");\n    const { t } = useTranslation('translation');\n    const sidebar = useAppSelector(selectSidebar);\n    const [sidebarStatus, setSidebarStatus] = useState<null | typeof sidebar>(null);\n    const dispatch = useAppDispatch();\n    const { isAdmin } = useAuthentication({});\n    const { chats } = useAppSelector(selectMessages);\n    const { profile } = useAppSelector(selectAuthentication);\n    const [darkLightMode, setDarkLightMode] = useState<boolean>(sidebar.isVisibleBg);\n\n\n    const directionToggle = (): void => {\n        if (sidebar.direction === 'right') {\n            dispatch(setGlobalParams({ param: 'sidebar', key: 'direction', value: 'left' }));\n        } else {\n            dispatch(setGlobalParams({ param: 'sidebar', key: 'direction', value: 'right' }));\n        }\n    }\n    const fullscreenToggle = (): void => {\n        const el = document.documentElement as HTMLElement;\n        function fullscreen() {\n            if (el.requestFullscreen) {\n                el.requestFullscreen();\n                setFullScreen(true);\n            }\n        }\n        function existFullscreen() {\n            if (document.fullscreenElement) {\n                document.exitFullscreen()\n                    .catch(er => console.log(er));\n                setFullScreen(false);\n            }\n        }\n        if (window.fullScreen && window.screen.height === window.innerHeight) {\n            existFullscreen();\n        }\n        else if (window.screen.height !== window.innerHeight) {\n            fullscreen();\n        }\n\n    }\n    const unreadMessagesCount = (): number => {\n        let count = 0;\n        if (profile) {\n            for (let i = 0; i < chats.length; i++) {\n                let messages = chats[i].messages;\n                for (let j = 0; j < messages.length; j++) {\n                    if (!messages[j].viewers.includes(profile.id) && messages[j].user.id !== profile.id) count++;\n                }\n            }\n        }\n        return count;\n    }\n    useEffect(() => {\n        setSidebarStatus(sidebar)\n        window.onkeydown = (event) => {\n            if (event.key === 'Escape' || event.key === 'F11') {\n                event.preventDefault();\n                fullscreenToggle();\n            }\n        }\n    }, [sidebar]);\n    if (!sidebarStatus || (sidebarStatus && !sidebarStatus.isVisible)) return null;\n    return (\n        <>\n            <div className={`sidebar ${sidebar.direction}`}>\n                <button type=\"button\" className=\"sidebar-buttons\" onClick={() => directionToggle()} title={t(\"Switch the sidebar direction\")}>\n                    <SVG name={`arrow-${sidebar.direction === 'right' ? 'left' : 'right'}`} color={sidebar.color} />\n                </button>\n                <button type=\"button\" className=\"sidebar-buttons\" onClick={() => setSearchModal(!searchModal)} title={t('Search')}>\n                    <SVG name=\"search\" color={sidebar.color} />\n                </button>\n                <button type=\"button\" className='sidebar-buttons' onClick={() => setDarkLightMode(true)} title={t('Dark-light mode')} id=\"sidebar-darkLightMode-button\">\n                    <SVG name='circle-half-stroke' color={sidebar.color} />\n                </button>\n                <button type=\"button\" className=\"sidebar-buttons\" onClick={() => fullscreenToggle()} title={t(\"Exit fullscreen\") || t(\"Fullscreen\")}>\n                    <SVG name={fullScreen ? \"compress-solid\" : \"expand-solid\"} color={sidebar.color} />\n                </button>\n                <button type=\"button\" className=\"sidebar-buttons\" onClick={() => setLanguagesModal(!languagesModal)} title={t(\"Choose your language\")}>\n                    <SVG name='language' color={sidebar.color} />\n                </button>\n                <button type=\"button\" className=\"sidebar-buttons\" onClick={() => setSettingsModal(!settingsModal)} title={t(\"Settings\")}>\n                    <SVG name='gear-solid' color={sidebar.color} />\n                </button>\n                <Link href={AppRoutes.favorites} className=\"sidebar-buttons\" title={t(\"Favorites\")}>\n                    <SVG name=\"heart-solid\" color={sidebar.color} />\n                </Link>\n                <Link href={AppRoutes.profiles} className=\"sidebar-buttons\" title={t(\"Users\")}>\n                    <SVG name=\"user-group-solid\" color={sidebar.color} />\n                </Link>\n                <Link href={AppRoutes.posts} className=\"sidebar-buttons\" title={t(\"Posts\")}>\n                    <SVG name=\"blog-solid\" color={sidebar.color} />\n                </Link>\n                <button className=\"sidebar-buttons\" title={t(\"Messages\")} onClick={() => setMessagesModal(true)}>\n                    <SVG name=\"comment-solid\" color={sidebar.color} />\n                    {unreadMessagesCount() > 0 ?\n                        <span className=\"unreadMessagesCount\" title={t(\"New messages\")}>{unreadMessagesCount()}</span>\n                        : null}\n                </button>\n                {isAdmin ? <>\n                    <button className=\"sidebar-buttons\" title={t(\"Notifications\")} onClick={() => setNotificationsModal(true)}>\n                        <SVG name=\"bell-solid\" color={sidebar.color} />\n                    </button>\n                </>\n                    : null}\n                <Link href={AppRoutes.goals} className=\"sidebar-buttons\" title={t(\"My goals\")}>\n                    <SVG name=\"trophy-solid\" color={sidebar.color} />\n                </Link>\n            </div>\n            <Modal isVisible={searchModal}\n                title=\"Search\"\n                setIsVisible={setSearchModal}\n                form=\"search\"\n                {...{ query, setQuery, sender: \"search\" }}\n            />\n            <Modal isVisible={languagesModal}\n                title=\"Choose your language\"\n                setIsVisible={setLanguagesModal}\n                form=\"translation\"\n            />\n            <Modal isVisible={settingsModal}\n                title=\"Settings\"\n                closeButton={true}\n                setIsVisible={setSettingsModal}\n                form=\"settings\"\n                border={\"specialColor\"}\n                fullScreen={true}\n                background={\"bgNone\"}\n            />\n            <Modal isVisible={darkLightMode}\n                title=\"Dark light mode\"\n                closeButton={true}\n                setIsVisible={setDarkLightMode}\n                form=\"dark-light-mode\"\n                fullScreen={true}\n            />\n            <Modal\n                isVisible={notificationModal}\n                title=\"Notifications\"\n                closeButton={true}\n                setIsVisible={setNotificationsModal}\n                form=\"notifications\"\n                fullScreen={true}\n            />\n            <Modal\n                isVisible={messagesModal}\n                title=\"Messages\"\n                closeButton={true}\n                setIsVisible={setMessagesModal}\n                fullScreen={true}\n                form=\"messages\"\n            />\n        </>\n    )\n}\n\nexport default Sidebar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}