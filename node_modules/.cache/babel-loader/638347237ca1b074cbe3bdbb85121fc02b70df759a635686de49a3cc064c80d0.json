{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/worldoftechnology/project-images/client/src/components/layouts/progressbar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAppSelector } from 'store/hooks';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParentDiv = styled.div`\n    width:100%;\n    height:4px;\n    position: fixed;\n    top:50px;\n    right:0;\n    display: flex;\n    justify-content: flex-start;\n    user-select: none;\n    z-index:100;\n`;\n_c = ParentDiv;\nconst ChildDiv = styled.div`\n    width:${props => props.$percentage}%;\n    height:100%;\n    background-color:${props => props.$bgColor ? props.$bgColor : \"red\"};\n`;\n_c2 = ChildDiv;\nconst ProgressBar = () => {\n  _s();\n  const {\n    isVisible,\n    backgroundColor\n  } = useAppSelector(state => state.global.progressBar);\n  const [percentage, setPercentage] = useState(0);\n  useEffect(() => {\n    window.addEventListener('scroll', function () {\n      let winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n      let height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      let scrolled = Math.round(winScroll / height * 100);\n      setPercentage(scrolled);\n    });\n  }, [isVisible, percentage]);\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(ParentDiv, {\n    className: \"progess-bar\",\n    children: /*#__PURE__*/_jsxDEV(ChildDiv, {\n      $percentage: percentage,\n      $bgColor: backgroundColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ProgressBar, \"yb23pw8bJ1zz4i9pWwKI6GiUYMo=\", false, function () {\n  return [useAppSelector];\n});\n_c3 = ProgressBar;\nexport default ProgressBar;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ParentDiv\");\n$RefreshReg$(_c2, \"ChildDiv\");\n$RefreshReg$(_c3, \"ProgressBar\");","map":{"version":3,"names":["React","useEffect","useState","useAppSelector","styled","jsxDEV","_jsxDEV","ParentDiv","div","_c","ChildDiv","props","$percentage","$bgColor","_c2","ProgressBar","_s","isVisible","backgroundColor","state","global","progressBar","percentage","setPercentage","window","addEventListener","winScroll","document","body","scrollTop","documentElement","height","scrollHeight","clientHeight","scrolled","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/home/mohammed/worldoftechnology/project-images/client/src/components/layouts/progressbar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAppSelector } from 'store/hooks';\nimport styled from 'styled-components';\n\nconst ParentDiv = styled.div`\n    width:100%;\n    height:4px;\n    position: fixed;\n    top:50px;\n    right:0;\n    display: flex;\n    justify-content: flex-start;\n    user-select: none;\n    z-index:100;\n`;\ninterface Props {\n    $percentage: number\n    $bgColor: string\n}\nconst ChildDiv = styled.div<Props>`\n    width:${props => props.$percentage}%;\n    height:100%;\n    background-color:${props => props.$bgColor ? props.$bgColor : \"red\"};\n`;\n\nconst ProgressBar: React.FC = (): JSX.Element | null => {\n    const { isVisible, backgroundColor } = useAppSelector(state => state.global.progressBar);\n    const [percentage, setPercentage] = useState<number>(0);\n    useEffect(() => {\n        window.addEventListener('scroll', function () {\n            let winScroll: number = document.body.scrollTop || document.documentElement.scrollTop;\n            let height: number = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n            let scrolled: number = Math.round((winScroll / height) * 100);\n            setPercentage(scrolled);\n        })\n    }, [isVisible, percentage]);\n\n    if (!isVisible) return null;\n    return (\n        <ParentDiv className='progess-bar' >\n            <ChildDiv $percentage={percentage} $bgColor={backgroundColor}></ChildDiv>\n        </ParentDiv>\n    )\n}\n\nexport default ProgressBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,aAAa;AAC5C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,SAAS;AAef,MAAMG,QAAQ,GAAGN,MAAM,CAACI,GAAW;AACnC,YAAYG,KAAK,IAAIA,KAAK,CAACC,WAAY;AACvC;AACA,uBAAuBD,KAAK,IAAIA,KAAK,CAACE,QAAQ,GAAGF,KAAK,CAACE,QAAQ,GAAG,KAAM;AACxE,CAAC;AAACC,GAAA,GAJIJ,QAAQ;AAMd,MAAMK,WAAqB,GAAGA,CAAA,KAA0B;EAAAC,EAAA;EACpD,MAAM;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAGf,cAAc,CAACgB,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACC,WAAW,CAAC;EACxF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAS,CAAC,CAAC;EACvDD,SAAS,CAAC,MAAM;IACZuB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,YAAY;MAC1C,IAAIC,SAAiB,GAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS,IAAIF,QAAQ,CAACG,eAAe,CAACD,SAAS;MACrF,IAAIE,MAAc,GAAGJ,QAAQ,CAACG,eAAe,CAACE,YAAY,GAAGL,QAAQ,CAACG,eAAe,CAACG,YAAY;MAClG,IAAIC,QAAgB,GAAGC,IAAI,CAACC,KAAK,CAAEV,SAAS,GAAGK,MAAM,GAAI,GAAG,CAAC;MAC7DR,aAAa,CAACW,QAAQ,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC,EAAE,CAACjB,SAAS,EAAEK,UAAU,CAAC,CAAC;EAE3B,IAAI,CAACL,SAAS,EAAE,OAAO,IAAI;EAC3B,oBACIX,OAAA,CAACC,SAAS;IAAC8B,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC9BhC,OAAA,CAACI,QAAQ;MAACE,WAAW,EAAEU,UAAW;MAACT,QAAQ,EAAEK;IAAgB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAY;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjE;AAEpB,CAAC;AAAA1B,EAAA,CAlBKD,WAAqB;EAAA,QACgBZ,cAAc;AAAA;AAAAwC,GAAA,GADnD5B,WAAqB;AAoB3B,eAAeA,WAAW;AAAC,IAAAN,EAAA,EAAAK,GAAA,EAAA6B,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAA9B,GAAA;AAAA8B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}