{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  scrollToTop: {\n    isVisible: true\n  },\n  pathBar: {\n    isVisible: true\n  },\n  progressBar: {\n    isVisible: true,\n    backgroundColor: \"red\"\n  },\n  body: {\n    fontFamily: \"times new roman\",\n    backgroundColor: [0, 100, 100],\n    opacity: 80\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"black\",\n    opacity: 80,\n    marginsColor: \"red\"\n  },\n  footer: {\n    color: \"white\",\n    backgroundColor: \"black\",\n    opacity: 80,\n    marginsColor: \"red\"\n  },\n  controlPanel: {\n    isVisible: true\n  }\n};\nconst globalSlicer = createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setGlobalParams(state, actions) {\n      function setValues(param, key, value) {\n        state[param][key] = value;\n      }\n      setValues(actions.payload.param, actions.payload.key, actions.payload.value);\n    }\n  }\n});\nexport const {\n  setGlobalParams\n} = globalSlicer.actions;\nexport default globalSlicer.reducer;","map":{"version":3,"names":["createSlice","initialState","scrollToTop","isVisible","pathBar","progressBar","backgroundColor","body","fontFamily","opacity","header","color","marginsColor","footer","controlPanel","globalSlicer","name","reducers","setGlobalParams","state","actions","setValues","param","key","value","payload","reducer"],"sources":["/home/mohammed/worldoftechnology/project-images/client/src/store/slicers/global.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { GlobalSettingsTypes } from 'libs/types';\n \n\nconst initialState: GlobalSettingsTypes = {\n    scrollToTop: {\n        isVisible:true\n    },\n    pathBar: {\n        isVisible: true\n    },\n    progressBar: {\n        isVisible: true,\n        backgroundColor: \"red\",\n    },\n    body: {\n        fontFamily: \"times new roman\",\n        backgroundColor: [0, 100, 100],\n        opacity: 80,\n    },\n    header: {\n        color: \"white\", \n        backgroundColor: \"black\",\n        opacity: 80,\n        marginsColor: \"red\",\n    },\n     \n    footer: {\n        color: \"white\",\n        backgroundColor: \"black\",\n        opacity: 80,\n        marginsColor: \"red\",\n    },\n\n    controlPanel: {\n        isVisible: true\n    }\n}\nconst globalSlicer = createSlice({\n    name: 'global',\n    initialState,\n    reducers: {\n        setGlobalParams(state, actions: PayloadAction<{ param: any, key: any, value: string | number | boolean | number[] }>) {\n            function setValues<P extends keyof GlobalSettingsTypes, K extends keyof GlobalSettingsTypes[P], V extends GlobalSettingsTypes[P][K]>(param: P, key: K, value: V) {\n                state[param][key] = value;\n            }\n            setValues(actions.payload.param, actions.payload.key, actions.payload.value)\n        },\n\n    }\n})\n\nexport const { setGlobalParams } = globalSlicer.actions\nexport default globalSlicer.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAI7D,MAAMC,YAAiC,GAAG;EACtCC,WAAW,EAAE;IACTC,SAAS,EAAC;EACd,CAAC;EACDC,OAAO,EAAE;IACLD,SAAS,EAAE;EACf,CAAC;EACDE,WAAW,EAAE;IACTF,SAAS,EAAE,IAAI;IACfG,eAAe,EAAE;EACrB,CAAC;EACDC,IAAI,EAAE;IACFC,UAAU,EAAE,iBAAiB;IAC7BF,eAAe,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC9BG,OAAO,EAAE;EACb,CAAC;EACDC,MAAM,EAAE;IACJC,KAAK,EAAE,OAAO;IACdL,eAAe,EAAE,OAAO;IACxBG,OAAO,EAAE,EAAE;IACXG,YAAY,EAAE;EAClB,CAAC;EAEDC,MAAM,EAAE;IACJF,KAAK,EAAE,OAAO;IACdL,eAAe,EAAE,OAAO;IACxBG,OAAO,EAAE,EAAE;IACXG,YAAY,EAAE;EAClB,CAAC;EAEDE,YAAY,EAAE;IACVX,SAAS,EAAE;EACf;AACJ,CAAC;AACD,MAAMY,YAAY,GAAGf,WAAW,CAAC;EAC7BgB,IAAI,EAAE,QAAQ;EACdf,YAAY;EACZgB,QAAQ,EAAE;IACNC,eAAeA,CAACC,KAAK,EAAEC,OAA6F,EAAE;MAClH,SAASC,SAASA,CAAmHC,KAAQ,EAAEC,GAAM,EAAEC,KAAQ,EAAE;QAC7JL,KAAK,CAACG,KAAK,CAAC,CAACC,GAAG,CAAC,GAAGC,KAAK;MAC7B;MACAH,SAAS,CAACD,OAAO,CAACK,OAAO,CAACH,KAAK,EAAEF,OAAO,CAACK,OAAO,CAACF,GAAG,EAAEH,OAAO,CAACK,OAAO,CAACD,KAAK,CAAC;IAChF;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN;AAAgB,CAAC,GAAGH,YAAY,CAACK,OAAO;AACvD,eAAeL,YAAY,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}