{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/worldoftechnology/project-images/client/src/components/shared/elements/input-element.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport SVG from \"../svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content:center;\n    flex-direction: column;\n    .input__wrapper {\n        width: 100%;\n        display: flex;\n        justify-content: flex-end;\n        button[id=\"${_ref => {\n  let {\n    $buttonID\n  } = _ref;\n  return $buttonID;\n}}\"]:hover {\n            background: rgba(255,255, 255, 0.9);\n            svg path {\n                fill:black;\n            }\n        }\n        button[id=\"${_ref2 => {\n  let {\n    $buttonID\n  } = _ref2;\n  return $buttonID;\n}}\"] {\n            border-radius: 50%;\n            background: transparent;\n            cursor: pointer;\n            align-items: center;\n            border:none;\n            border-radius: 5px;\n            outline:none;\n            display: flex;\n            justify-content: center;\n            position: absolute;\n            padding:11px;\n            max-height: ${_ref3 => {\n  let {\n    $clearButtonMaxHeight\n  } = _ref3;\n  return $clearButtonMaxHeight;\n}};\n            margin: ${_ref4 => {\n  let {\n    $clearButtonMargin\n  } = _ref4;\n  return $clearButtonMargin;\n}};\n            svg {\n                width:13px;\n                height:13px;\n            }\n        }\n        input {\n            padding:0 10px;\n            min-height: ${_ref5 => {\n  let {\n    $minHeight\n  } = _ref5;\n  return $minHeight ? $minHeight : \"auto\";\n}};\n            outline:1px solid var(--borderColor);\n            border-radius: 5px;\n            padding:5px 10px;\n            border:none;\n        }\n        input:focus {\n            outline:1px solid var(--specialColor1);\n            \n        }\n    }\n    .label__wrapper {\n        width:100%;\n        display: flex;\n        justify-content: space-between;\n        .length_counter {\n            font-size:var(--fontSize12);\n            color:rgba(0,0, 0, 0.5);\n        }\n    }\n`;\n_c = Wrapper;\nexport default function InputElement(props) {\n  _s();\n  const {\n    value,\n    labelInnerText,\n    title,\n    placeholder,\n    required\n  } = props;\n  const inputID = React.useId();\n  const buttonID = React.useId();\n  const {\n    t: t_\n  } = useTranslation('translation');\n  const t = text => t_(text);\n  const maxLength = props.maxLength !== undefined ? props.maxLength : 100;\n  const minLength = props.minLength !== undefined ? props.minLength : 0;\n  const type = props.type || \"text\";\n  const className = props.className || \"\";\n  const clearButton = props.clearButton !== undefined ? props.clearButton : true;\n  const onFocus = props.onFocus ? props.onFocus : () => {};\n  const autoFocus = props.autoFocus === true ? true : false;\n  const counter = props.counter === false ? false : true;\n  const clearButtonMaxHeight = props.clearButtonMaxHeight || \"100%\";\n  const clearButtonMargin = props.clearButtonMargin || \"0\";\n  const onChange = props.onChange ? props.onChange : () => {};\n  const onInput = props.onInput ? props.onInput : () => {};\n  const onKeyDwon = props.onKeyDown ? props.onKeyDown : () => {};\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    $buttonID: buttonID,\n    $minHeight: props.minHeight,\n    $clearButtonMaxHeight: clearButtonMaxHeight,\n    $clearButtonMargin: clearButtonMargin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: inputID,\n        children: [t(labelInnerText || \"\"), required ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), counter ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"length_counter\",\n        children: [value.length, \"/\", maxLength]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        id: inputID,\n        autoFocus: autoFocus,\n        maxLength: maxLength,\n        title: t(title || \"\"),\n        required: required,\n        className: className,\n        minLength: minLength,\n        onKeyDown: e => onKeyDwon(e.target),\n        value: value,\n        placeholder: t(placeholder || ''),\n        onInput: e => onInput(e.target.value),\n        onChange: e => onChange(e.target.value),\n        onFocus: e => onFocus(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), value.length > 0 && clearButton ? /*#__PURE__*/_jsxDEV(\"button\", {\n        id: buttonID,\n        onClick: () => onInput(\"\"),\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          color: \"silver\",\n          name: \"xmark-solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(InputElement, \"43OQvNXZLQhT624jsmrFqzJGL4g=\", false, function () {\n  return [React.useId, React.useId, useTranslation];\n});\n_c2 = InputElement;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"InputElement\");","map":{"version":3,"names":["React","useTranslation","styled","SVG","jsxDEV","_jsxDEV","Wrapper","div","_ref","$buttonID","_ref2","_ref3","$clearButtonMaxHeight","_ref4","$clearButtonMargin","_ref5","$minHeight","_c","InputElement","props","_s","value","labelInnerText","title","placeholder","required","inputID","useId","buttonID","t","t_","text","maxLength","undefined","minLength","type","className","clearButton","onFocus","autoFocus","counter","clearButtonMaxHeight","clearButtonMargin","onChange","onInput","onKeyDwon","onKeyDown","minHeight","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","length","id","e","target","onClick","color","name","_c2","$RefreshReg$"],"sources":["/home/mohammed/worldoftechnology/project-images/client/src/components/shared/elements/input-element.tsx"],"sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport SVG from \"../svg\";\ninterface WrapperProps {\n    $buttonID: string;\n    $minHeight?: string;\n    $clearButtonMaxHeight: string;\n    $clearButtonMargin: string;\n}\nconst Wrapper = styled.div<WrapperProps>`\n    width: 100%;\n    display: flex;\n    justify-content:center;\n    flex-direction: column;\n    .input__wrapper {\n        width: 100%;\n        display: flex;\n        justify-content: flex-end;\n        button[id=\"${({ $buttonID }) => $buttonID}\"]:hover {\n            background: rgba(255,255, 255, 0.9);\n            svg path {\n                fill:black;\n            }\n        }\n        button[id=\"${({ $buttonID }) => $buttonID}\"] {\n            border-radius: 50%;\n            background: transparent;\n            cursor: pointer;\n            align-items: center;\n            border:none;\n            border-radius: 5px;\n            outline:none;\n            display: flex;\n            justify-content: center;\n            position: absolute;\n            padding:11px;\n            max-height: ${({ $clearButtonMaxHeight }) => $clearButtonMaxHeight};\n            margin: ${({ $clearButtonMargin }) => $clearButtonMargin};\n            svg {\n                width:13px;\n                height:13px;\n            }\n        }\n        input {\n            padding:0 10px;\n            min-height: ${({ $minHeight }) => $minHeight ? $minHeight : \"auto\"};\n            outline:1px solid var(--borderColor);\n            border-radius: 5px;\n            padding:5px 10px;\n            border:none;\n        }\n        input:focus {\n            outline:1px solid var(--specialColor1);\n            \n        }\n    }\n    .label__wrapper {\n        width:100%;\n        display: flex;\n        justify-content: space-between;\n        .length_counter {\n            font-size:var(--fontSize12);\n            color:rgba(0,0, 0, 0.5);\n        }\n    }\n`\ninterface Props {\n    placeholder?: string;\n    title?: string;\n    maxLength?: number;\n    required?: boolean;\n    onInput?: (value: string) => void;\n    onFocus?: (value: any) => void;\n    onKeyDown?: (value: any) => void;\n    onChange?: (value: any) => void;\n    value: string;\n    labelInnerText?: string;\n    minLength?: number;\n    type?: \"password\" | \"text\" | \"button\" | \"search\" | \"url\" | \"email\";\n    clearButton?: boolean;\n    autoFocus?: boolean;\n    counter?: boolean;\n    minHeight?: string;\n    clearButtonMaxHeight?: string;\n    clearButtonMargin?: string;\n    className?:string;\n}\nexport default function InputElement(props: Props): JSX.Element {\n    const { value, labelInnerText, title, placeholder, required } = props;\n    const inputID = React.useId();\n    const buttonID = React.useId();\n    const { t:t_ } = useTranslation('translation');\n    const t = (text:string):string => t_(text)\n    const maxLength = props.maxLength !== undefined ? props.maxLength : 100;\n    const minLength = props.minLength !== undefined ? props.minLength : 0;\n    const type = props.type || \"text\";\n    const className = props.className || \"\";\n    const clearButton = props.clearButton !== undefined ? props.clearButton : true;\n    const onFocus = props.onFocus ? props.onFocus : (): void => { }\n    const autoFocus = props.autoFocus === true ? true : false;\n    const counter = props.counter === false ? false : true;\n    const clearButtonMaxHeight: string = props.clearButtonMaxHeight || \"100%\";\n    const clearButtonMargin: string = props.clearButtonMargin || \"0\";\n    const onChange = props.onChange ? props.onChange : (): void => { }\n    const onInput = props.onInput ? props.onInput : (): void => { }\n    const onKeyDwon = props.onKeyDown ? props.onKeyDown : (): void => { }\n    return (\n        <Wrapper $buttonID={buttonID} $minHeight={props.minHeight} $clearButtonMaxHeight={clearButtonMaxHeight} $clearButtonMargin={clearButtonMargin}>\n            <div className=\"label__wrapper\">\n                <label htmlFor={inputID}>{t(labelInnerText || \"\")}\n                    {required ?\n                        <span className=\"red\">*</span>\n                        : null}\n                </label>\n                {counter ?\n                    <span className=\"length_counter\">{value.length}/{maxLength}</span>\n                    : null}\n            </div>\n            <div className=\"input__wrapper\">\n                <input\n                    type={type}\n                    id={inputID}\n                    autoFocus={autoFocus}\n                    maxLength={maxLength}\n                    title={t(title || \"\")}\n                    required={required}\n                    className={className}\n                    minLength={minLength}\n                    onKeyDown={(e)=> onKeyDwon((e.target as HTMLInputElement))}\n                    value={value}\n                    placeholder={t(placeholder || '')}\n                    onInput={(e) => onInput((e.target as HTMLInputElement).value)}\n                    onChange={(e) => onChange((e.target as HTMLInputElement).value)}\n                    onFocus={(e) => onFocus(e)}\n                ></input>\n                {value.length > 0 && clearButton ?\n                    <button id={buttonID} onClick={() => onInput(\"\")} type=\"button\">\n                        <SVG color=\"silver\" name=\"xmark-solid\" />\n                    </button>\n                    : null}\n            </div>\n        </Wrapper>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}