{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport globalSlicer from './slicers/global';\nimport errorsSlicer from './slicers/errors';\nimport imagesSlicer from './slicers/images';\nexport const store = configureStore({\n  reducer: {\n    global: globalSlicer,\n    images: imagesSlicer,\n    errors: errorsSlicer\n  }\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["configureStore","globalSlicer","errorsSlicer","imagesSlicer","store","reducer","global","images","errors"],"sources":["/home/mohammed/worldoftechnology/project-images/client/src/store/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport globalSlicer from './slicers/global'\nimport errorsSlicer from './slicers/errors'\nimport imagesSlicer from './slicers/images';\n\n\nexport const store = configureStore({\n    reducer:{\n        global:globalSlicer,\n        images:imagesSlicer,\n        errors:errorsSlicer,\n    }\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,YAAY,MAAM,kBAAkB;AAG3C,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAChCK,OAAO,EAAC;IACJC,MAAM,EAACL,YAAY;IACnBM,MAAM,EAACJ,YAAY;IACnBK,MAAM,EAACN;EACX;AACJ,CAAC,CAAC;;AAEF;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}